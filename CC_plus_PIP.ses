{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[5]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin LinearCircuit[0]
{
load_file("lincir.hoc", "LinearCircuit")
}
{
ocbox_ = new LinearCircuit(1)
}
{object_push(ocbox_)}
{version(2)}
{mkelm(7, 160, 100, 1, 1.5708)}
1
0
{mklabel(0, "A1", 0.55, -3.086)}
{mklabel(3, "V_A1o", 24.355, 2.95)}
{mkelm(4, 150, -85, 2.5, -1.5708)}
{mklabel(0, "Vcmd", 30.425, 2.066)}
{sel.extra_info.restore()}
10
4.1672 0
5 0
3 -100
0 0
0 0
0 0
0 0
0 0
0 0
0 0
{mkelm(0, 150, 45, 3.5, 1.5708)}
{mkelm(1, 160, 155, 1.5, 1.5708)}
500
{mklabel(0, "Ro", -11.667, 4.946)}
{mkelm(0, 160, 180, 1, -1.5708)}
{mkelm(0, 160, 130, 1, 1.5708)}
{mkelm(0, 215, 190, 5.5, 3.14159)}
{mkelm(7, 280, 120, 1, -1.5708)}
1
0
{mklabel(0, "A2", 3.2122, 6.424)}
{mklabel(3, "V_A2o", 27.1697, 1.318)}
{mkelm(0, 280, 70, 3, -1.5708)}
{mkelm(0, 225, 40, 5.5, 3.14159)}
{mkelm(0, 270, 165, 2.5, 1.5708)}
{mkelm(6, 150, -130, 2, 0)}
{mkelm(0, 190, 120, 3, 0)}
{mkelm(0, 220, -25, 14.5, 1.5708)}
{mkelm(0, 280, -75, 11.5, 1.5708)}
{mkelm(7, 160, -180, 1, 3.14159)}
1
0
{mklabel(0, "A_diff_for_Imon", 11.166, 2.881)}
{mklabel(3, "V_Imon", -16.725, 10.956)}
{mkelm(2, 180, 155, 1.5, 1.5708)}
0.00035
{mklabel(0, "Co", 16.116, 5.729)}
{mkelm(0, 170, 170, 1, 0)}
{mkelm(0, 170, 140, 1, -1.08793e-007)}
{mkelm(0, 345, 40, 6.5, 0)}
{mkelm(7, 400, 100, 1, 1.5708)}
4e-010
0.0003
{mklabel(0, "Acpn", -0.094, 0.912)}
{mkelm(2, 400, 160, 1, -1.5708)}
0.0025
{mklabel(0, "Ccpn", 17.097, 5.135)}
{mkelm(0, 335, 190, 6.5, 0)}
{mkelm(0, 160, 270, 8, -1.5708)}
{mkelm(0, 75, 190, 8.5, 0)}
{mkelm(7, -30, 180, 1, 3.14159)}
1
0
{mklabel(0, "A_V_out", 31.6923, 3.29)}
{mkelm(0, -50, -70, 25, 1.5708)}
{mkelm(7, -200, -330, 1, 3.14159)}
1
0
{mklabel(0, "Af_V_1", 3.714, 1.785)}
{mkelm(0, -60, -320, 1, 0)}
{mkelm(1, -85, -320, 1.5, 0)}
0.00542
{mklabel(0, "Rf_V_1a", 0.5545, -9.79)}
{mkelm(1, -120, -320, 2, 0)}
0.188
{mklabel(0, "Rf_V_1b", -1.463, -9.79)}
{mkelm(0, -100, -290, 3, -1.5708)}
{mkelm(2, -160, -260, 2, 0)}
0.11
{mklabel(0, "Cf_V_1a", -1.631, 18.423)}
{mkelm(0, -120, -260, 2, 0)}
{mkelm(0, -200, -260, 2, 0)}
{mkelm(2, -140, -345, 2.5, 1.5708)}
0.011
{mklabel(0, "Cf_V_1b", 25.625, -0.542)}
{mkelm(6, -140, -390, 2, 0)}
{mkelm(0, -160, -320, 2, 0)}
{mkelm(0, -200, -370, 2, 0)}
{mkelm(0, -180, -355, 1.5, 1.5708)}
{mkelm(0, -220, -350, 2, -1.5708)}
{mkelm(0, -220, -295, 3.5, 1.5708)}
{mkelm(0, -240, -330, 2, 0)}
{mkelm(1, -280, -330, 2, 0)}
0.00858
{mklabel(0, "Rf_V_2a", 0.07, -8.654)}
{mkelm(1, -320, -330, 2, 0)}
0.114
{mklabel(0, "Rf_V_2b", -1.673, -7.866)}
{mkelm(0, -360, -330, 2, 0)}
{mkelm(7, -400, -340, 1, 3.14159)}
1
0
{mklabel(0, "A_f_V_2", 2.44, 1.243)}
{mklabel(3, "V_out_filtered", -35.788, 5.05195)}
{mkelm(0, -300, -300, 3, -1.5708)}
{mkelm(0, -320, -270, 2, 0)}
{mkelm(2, -360, -270, 2, 0)}
0.1
{mklabel(0, "Cf_V_2a", -0.205, 19.521)}
{mkelm(0, -400, -270, 2, 0)}
{mkelm(0, -420, -305, 3.5, 1.5708)}
{mkelm(0, -420, -355, 1.5, 1.5708)}
{mkelm(0, -400, -370, 2, 0)}
{mkelm(0, -380, -360, 1, 1.5708)}
{mkelm(2, -340, -350, 2, 1.5708)}
0.01
{mklabel(0, "Cf_V_2b", 18.495, -0.468)}
{mkelm(6, -340, -390, 2, 0)}
{mkelm(0, 105, -180, 3.49999, -1.44545e-012)}
{mkelm(0, 70, -355, 17.5, 1.5708)}
{mkelm(0, 10, -530, 6, 0)}
{mkelm(1, -70, -530, 2, 0)}
0.00542
{mklabel(0, "Rf_I_1a", 1.5053, -7.581)}
{mkelm(1, -110, -530, 2, 0)}
0.188
{mklabel(0, "Rf_I_1b", -0.04, -8.013)}
{mkelm(0, -150, -530, 2, 0)}
{mkelm(7, -190, -540, 1, 3.14159)}
1
0
{mklabel(0, "Af_I_1", 2.928, 1.987)}
{mkelm(0, -210, -505, 3.5, -1.5708)}
{mkelm(0, -190, -470, 2, 0)}
{mkelm(2, -150, -470, 2, 0)}
0.11
{mklabel(0, "Cf_I_1a", -2.451, 17.241)}
{mkelm(0, -110, -470, 2, 0)}
{mkelm(0, -90, -500, 3, -1.5708)}
{mkelm(6, -130, -590, 2, 0)}
{mkelm(2, -130, -550, 2, -1.5708)}
0.011
{mklabel(0, "Cf_I_1b", 19.3415, -0.564)}
{mkelm(0, -190, -580, 2, 0)}
{mkelm(0, -170, -565, 1.5, 1.5708)}
{mkelm(0, -210, -560, 2, -1.5708)}
{mkelm(0, -230, -540, 2, 0)}
{mkelm(1, -270, -540, 2, 0)}
0.00858
{mklabel(0, "Rf_I_2a", -3.144, 11.568)}
{mkelm(1, -310, -540, 2, 0)}
0.114
{mklabel(0, "Rf_I_2b", 0.936, 11.135)}
{mkelm(0, -350, -540, 2, 0)}
{mkelm(7, -390, -550, 1, 3.14159)}
1
0
{mklabel(0, "Af_I_2", 4.018, 2.323)}
{mklabel(3, "_", -21.134, 0.208)}
{mkelm(0, -390, -590, 2, 0)}
{mkelm(0, -410, -570, 2, -1.5708)}
{mkelm(0, -370, -575, 1.5, 1.5708)}
{mkelm(0, -410, -515, 3.5, -1.5708)}
{mkelm(0, -390, -480, 2, 0)}
{mkelm(2, -350, -480, 2, 0)}
0.1
{mklabel(0, "Cf_I_2a", 1.235, 18.875)}
{mkelm(0, -310, -480, 2, 0)}
{mkelm(0, -290, -510, 3, -1.5708)}
{mkelm(2, -330, -565, 2.5, 1.5708)}
0.01
{mklabel(0, "Cf_I_2b", 21.184, -0.217)}
{mkelm(6, -330, -610, 2, 0)}
{mkelm(0, 230, -190, 5, 1.68655e-012)}
{mkelm(0, 200, -170, 2, 3.14159)}
{mkelm(6, -540, -580, 2, 0)}
{mkelm(1, -525, -560, 1.5, 0)}
500
{mklabel(0, "Ro_Imon", 1.649, 13.368)}
{mkelm(0, -440, -550, 3, 0)}
{mkelm(7, -490, -560, 1, 3.14159)}
1
0
{mklabel(0, "I_mon_filtered", 23.725, 3.681)}
{mkelm(6, -470, -590, 2, 0)}
{mkelm(0, 170, 60, 2, -1.5708)}
{mkelm(6, 290, 160, 2, 3.14159)}
{mkelm(3, 150, -25, 3.5, 1.5708)}
3
{mklabel(0, "Lpar", 25.676, 3.0399)}
{mkelm(0, 115, -60, 3.5, 0)}
{mkelm(0, 135, 80, 1.5, 0)}
{mkelm(1, 120, 100, 2, -1.5708)}
1
{mklabel(0, "R1_A1par", -17.116, -1.2191)}
{mkelm(0, 140, 120, 2, 0)}
{mkelm(1, 400, 180, 1, 1.5708)}
0.65
{mklabel(0, "Rcpn", 19.919, 3.147)}
{mkelm(0, 410, 60, 2, -1.5708)}
{mkelm(0, 400, 125, 0.500001, 1.57079)}
{mkelm(6, 390, 60, 2, 0)}
{mkelm(3, 400, 140, 0.999999, 1.5708)}
17
{mklabel(0, "L130", 15, 15)}
{mkelm(7, 10, -50, 1, 3.14159)}
1e-009
0
{mklabel(0, "A_BB", 4.1634, -0.2045)}
{mklabel(3, "v_BB", 1.19843, -10.8038)}
{mkelm(1, 30, -50, 1, -1.5708)}
0.02
{mklabel(0, "R1_A_BB", 25.6769, 4.2119)}
{mkelm(1, 40, -60, 1, 0)}
10
{mklabel(0, "R2_A_BB", 12.1438, -8.7531)}
{mkelm(6, 30, -20, 2, 3.14159)}
{mkelm(0, -10, 60, 11, -1.5708)}
{mkelm(0, 65, -60, 1.5, 0)}
{mkelm(0, 140, 350, 2, 0)}
{mkelm(2, 160, 375, 2.5, 1.5708)}
0.0038737
{mklabel(0, "Cinstr", 15, 15)}
{mkelm(6, 160, 420, 2, 3.14159)}
{mkelm(1, 100, 350, 2, 0)}
0.02294
{mklabel(0, "R11", -2.8954, 16.424)}
{mkelm(2, 80, 330, 2, 1.5708)}
0.00091973
{mklabel(0, "C11", 19.2822, -10.757)}
{mkelm(6, 80, 290, 2, 0)}
{mkelm(1, 60, 350, 2, 0)}
0.44687
{mklabel(0, "R10", 2.2635, 14.246)}
{mkelm(2, 40, 330, 2, 1.5708)}
0.0010907
{mklabel(0, "C10", 12.8273, -10.757)}
{mkelm(6, 40, 290, 2, 0)}
{mkelm(1, 20, 350, 2, 0)}
0.3919
{mklabel(0, "R9", 0.1638, 14.246)}
{mkelm(2, 1.18634e-015, 330, 2, 1.5708)}
0.00040436
{mklabel(0, "C9", 12.9052, -10.031)}
{mkelm(6, 0, 290, 2, 0)}
{mkelm(1, -20, 350, 2, 0)}
0.3081
{mklabel(0, "R8", 1.6933, 16.424)}
{mkelm(2, -40, 330, 2, 1.5708)}
0.00023048
{mklabel(0, "C8", 14.4347, -10.031)}
{mkelm(6, -40, 290, 2, 0)}
{mkelm(1, -60, 350, 2, 0)}
0.42415
{mklabel(0, "R7", -3.3099, 15.698)}
{mkelm(2, -80, 330, 2, 1.5708)}
8.135e-005
{mklabel(0, "C7", 14.5125, -12.935)}
{mkelm(6, -80, 290, 2, 0)}
{mkelm(1, -100, 350, 2, 0)}
0.59359
{mklabel(0, "R6", 0.3972, 16.424)}
{mkelm(2, -120, 330, 2, 1.5708)}
0.00024672
{mklabel(0, "C6", 17.494, -10.757)}
{mkelm(6, -120, 290, 2, 0)}
{mkelm(1, -140, 350, 2, 0)}
0.85606
{mklabel(0, "R5", 1.201, 19.327)}
{mkelm(2, -160, 330, 2, 1.5708)}
0.00010502
{mklabel(0, "C5", 14.668, -10.757)}
{mkelm(6, -160, 290, 2, 0)}
{mkelm(1, -180, 350, 2, 0)}
1.2999
{mklabel(0, "R4", 4.182, 16.424)}
{mkelm(2, -200, 330, 2, 1.5708)}
0.00016961
{mklabel(0, "C4", 16.198, -12.209)}
{mkelm(6, -200, 290, 2, 0)}
{mkelm(1, -220, 350, 2, 0)}
2.1371
{mklabel(0, "R3", 2.808, 17.875)}
{mkelm(2, -240, 330, 2, 1.5708)}
0.00013417
{mklabel(0, "C3", 16.276, -10.757)}
{mkelm(6, -240, 290, 2, 0)}
{mkelm(1, -260, 350, 2, 0)}
3.9012
{mklabel(0, "R2", -0.017, 20.053)}
{mkelm(2, -280, 330, 2, 1.5708)}
0.00011684
{mklabel(0, "C2", 18.531, -11.483)}
{mkelm(6, -280, 290, 2, 0)}
{mkelm(1, -300, 350, 2, 0)}
7.9722
{mklabel(0, "R1", 2.964, 20.779)}
{mkelm(2, -320, 330, 2, 1.5708)}
7.447e-005
{mklabel(0, "C1", 15.705, -7.854)}
{mkelm(6, -320, 290, 2, 0)}
{mkelm(1, -340, 350, 2, 0)}
16.879
{mklabel(0, "Racc", 2.316, 20.779)}
{mkelm(1, -360, 330, 2, 1.5708)}
1000
{mklabel(0, "Rseal", 14.332, -2.773)}
{mkelm(6, -360, 290, 2, 0)}
{mkelm(1, -380, 350, 2, 0)}
50
{mklabel(0, "Rrest", 6.023, 18.601)}
{mkelm(6, -400, 330, 2, 0)}
{mkelm(1, 120, 370, 2, 1.5708)}
1e+009
{mklabel(0, "Rps", 15, 15)}
{mkelm(2, 120, 415, 2.5, -1.5708)}
0
{mklabel(0, "Cps", 15, 15)}
{mkelm(6, 120, 460, 2, 3.14159)}
{parasitic_ = 0  noconsist_ = 0}
{g.exec_menu("Simulate")  tool(2)}
{sel = nil}
{object_pop()}
{
{
save_window_=ocbox_.g
save_window_.size(0,300,0,200)
scene_vector_[2] = save_window_
ocbox_.g = save_window_
save_window_.save_name("ocbox_.g")
save_window_.label(160.55, 96.914, "A1", 1, 1, 0.5, 0.5, 1)
save_window_.label(184.355, 122.95, "V_A1o", 1, 1, 0.5, 0.5, 1)
save_window_.label(180.425, -82.934, "Vcmd", 1, 1, 0.5, 0.5, 1)
save_window_.label(148.333, 159.946, "Ro", 1, 1, 0.5, 0.5, 1)
save_window_.label(283.212, 126.424, "A2", 1, 1, 0.5, 0.5, 1)
save_window_.label(307.17, 101.318, "V_A2o", 1, 1, 0.5, 0.5, 1)
save_window_.label(171.166, -177.119, "A_diff_for_Imon", 1, 1, 0.5, 0.5, 1)
save_window_.label(123.275, -169.044, "V_Imon", 1, 1, 0.5, 0.5, 1)
save_window_.label(196.116, 160.729, "Co", 1, 1, 0.5, 0.5, 1)
save_window_.label(399.906, 100.912, "Acpn", 1, 1, 0.5, 0.5, 1)
save_window_.label(417.097, 165.135, "Ccpn", 1, 1, 0.5, 0.5, 1)
save_window_.label(1.6923, 183.29, "A_V_out", 1, 1, 0.5, 0.5, 1)
save_window_.label(-196.286, -328.215, "Af_V_1", 1, 1, 0.5, 0.5, 1)
save_window_.label(-84.4455, -329.79, "Rf_V_1a", 1, 1, 0.5, 0.5, 1)
save_window_.label(-121.463, -329.79, "Rf_V_1b", 1, 1, 0.5, 0.5, 1)
save_window_.label(-161.631, -241.577, "Cf_V_1a", 1, 1, 0.5, 0.5, 1)
save_window_.label(-114.375, -345.542, "Cf_V_1b", 1, 1, 0.5, 0.5, 1)
save_window_.label(-279.93, -338.654, "Rf_V_2a", 1, 1, 0.5, 0.5, 1)
save_window_.label(-321.673, -337.866, "Rf_V_2b", 1, 1, 0.5, 0.5, 1)
save_window_.label(-397.56, -338.757, "A_f_V_2", 1, 1, 0.5, 0.5, 1)
save_window_.label(-455.788, -334.948, "V_out_filtered", 1, 1, 0.5, 0.5, 1)
save_window_.label(-360.205, -250.479, "Cf_V_2a", 1, 1, 0.5, 0.5, 1)
save_window_.label(-321.505, -350.468, "Cf_V_2b", 1, 1, 0.5, 0.5, 1)
save_window_.label(-68.4947, -537.581, "Rf_I_1a", 1, 1, 0.5, 0.5, 1)
save_window_.label(-110.04, -538.013, "Rf_I_1b", 1, 1, 0.5, 0.5, 1)
save_window_.label(-187.072, -538.013, "Af_I_1", 1, 1, 0.5, 0.5, 1)
save_window_.label(-152.451, -452.759, "Cf_I_1a", 1, 1, 0.5, 0.5, 1)
save_window_.label(-110.659, -550.564, "Cf_I_1b", 1, 1, 0.5, 0.5, 1)
save_window_.label(-273.144, -528.432, "Rf_I_2a", 1, 1, 0.5, 0.5, 1)
save_window_.label(-309.064, -528.865, "Rf_I_2b", 1, 1, 0.5, 0.5, 1)
save_window_.label(-385.982, -547.677, "Af_I_2", 1, 1, 0.5, 0.5, 1)
save_window_.label(-431.134, -549.792, "_", 1, 1, 0.5, 0.5, 1)
save_window_.label(-348.765, -461.125, "Cf_I_2a", 1, 1, 0.5, 0.5, 1)
save_window_.label(-308.816, -565.217, "Cf_I_2b", 1, 1, 0.5, 0.5, 1)
save_window_.label(-523.351, -546.632, "Ro_Imon", 1, 1, 0.5, 0.5, 1)
save_window_.label(-466.275, -556.319, "I_mon_filtered", 1, 1, 0.5, 0.5, 1)
save_window_.label(175.676, -21.9601, "Lpar", 1, 1, 0.5, 0.5, 1)
save_window_.label(102.884, 98.7809, "R1_A1par", 1, 1, 0.5, 0.5, 1)
save_window_.label(419.919, 183.147, "Rcpn", 1, 1, 0.5, 0.5, 1)
save_window_.label(415, 155, "L130", 1, 1, 0.5, 0.5, 1)
save_window_.label(14.1634, -50.2045, "A_BB", 1, 1, 0.5, 0.5, 1)
save_window_.label(-8.80157, -60.8037, "v_BB", 1, 1, 0.5, 0.5, 1)
save_window_.label(55.6769, -45.7881, "R1_A_BB", 1, 1, 0.5, 0.5, 1)
save_window_.label(52.1438, -68.7531, "R2_A_BB", 1, 1, 0.5, 0.5, 1)
save_window_.label(175, 390, "Cinstr", 1, 1, 0.5, 0.5, 1)
save_window_.label(97.1046, 366.424, "R11", 1, 1, 0.5, 0.5, 1)
save_window_.label(99.2822, 319.243, "C11", 1, 1, 0.5, 0.5, 1)
save_window_.label(62.2635, 364.246, "R10", 1, 1, 0.5, 0.5, 1)
save_window_.label(52.8273, 319.243, "C10", 1, 1, 0.5, 0.5, 1)
save_window_.label(20.1638, 364.246, "R9", 1, 1, 0.5, 0.5, 1)
save_window_.label(12.9052, 319.969, "C9", 1, 1, 0.5, 0.5, 1)
save_window_.label(-18.3067, 366.424, "R8", 1, 1, 0.5, 0.5, 1)
save_window_.label(-25.5653, 319.969, "C8", 1, 1, 0.5, 0.5, 1)
save_window_.label(-63.3099, 365.698, "R7", 1, 1, 0.5, 0.5, 1)
save_window_.label(-65.4875, 317.065, "C7", 1, 1, 0.5, 0.5, 1)
save_window_.label(-99.6028, 366.424, "R6", 1, 1, 0.5, 0.5, 1)
save_window_.label(-102.506, 319.243, "C6", 1, 1, 0.5, 0.5, 1)
save_window_.label(-138.799, 369.327, "R5", 1, 1, 0.5, 0.5, 1)
save_window_.label(-145.332, 319.243, "C5", 1, 1, 0.5, 0.5, 1)
save_window_.label(-175.818, 366.424, "R4", 1, 1, 0.5, 0.5, 1)
save_window_.label(-183.802, 317.791, "C4", 1, 1, 0.5, 0.5, 1)
save_window_.label(-217.192, 367.875, "R3", 1, 1, 0.5, 0.5, 1)
save_window_.label(-223.724, 319.243, "C3", 1, 1, 0.5, 0.5, 1)
save_window_.label(-260.017, 370.053, "R2", 1, 1, 0.5, 0.5, 1)
save_window_.label(-261.469, 318.517, "C2", 1, 1, 0.5, 0.5, 1)
save_window_.label(-297.036, 370.779, "R1", 1, 1, 0.5, 0.5, 1)
save_window_.label(-304.295, 322.146, "C1", 1, 1, 0.5, 0.5, 1)
save_window_.label(-337.684, 370.779, "Racc", 1, 1, 0.5, 0.5, 1)
save_window_.label(-345.668, 327.227, "Rseal", 1, 1, 0.5, 0.5, 1)
save_window_.label(-373.977, 368.601, "Rrest", 1, 1, 0.5, 0.5, 1)
save_window_.label(135, 385, "Rps", 1, 1, 0.5, 0.5, 1)
save_window_.label(135, 430, "Cps", 1, 1, 0.5, 0.5, 1)
}
ocbox_.map("LinearCircuit[0]", 1401, 18, 873, 873)
}
objref ocbox_
//End LinearCircuit[0]

{
xpanel("RunControl", 0)
v_init = 0
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 200
xvalue("t","t", 2 )
tstop = 200
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.004
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 250
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0.23
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(822,525)
}
{
save_window_ = new Graph(0)
save_window_.size(8.7585,12.3735,-14.8675,4.3575)
scene_vector_[4] = save_window_
{save_window_.view(8.7585, -14.8675, 3.615, 19.225, 440, 69, 300.6, 200.8)}
save_window_.addexpr("V_out", 2, 3, 0, 1, 2)
save_window_.addexpr("V_ideal", 3, 3, 0, 1, 2)
}
{
xpanel("realdata", 0)
xbutton("R1=20_C1=0_R2=0_C2=0_woBB_woCPN","real9()")
xbutton("R1=50_C1=0_R2=0_C2=0_woBB_woCPN","real10()")
xbutton("R1=100_C1=0_R2=0_C2=0_woBB_woCPN","real11()")
xbutton("R1=10_C1=2o7_R2=500_woC2_woBB_woCPN","real5()")
xbutton("R1=10_C1=2o7_R2=500_woC2_woBB_CPN=7o012","real4()")
xbutton("R1=10_C1=2o7_R2=500_C2=32_woBB_woCPN","real1()")
xbutton("R1=10_C1=2o7_R2=500_C2=32_BB=10_woCPN","real6()")
xbutton("R1=10_C1=2o7_R2=500_C2=32_woBB_CPN=5.778","real2()")
xbutton("R1=10_C1=2o7_R2=500_C2=32_BB=10_CPN=5.778","real7()")
xbutton("R1=10_C1=2o7_R2=500_C2=1o05_woBB_CPN=6o891","real3()")
xbutton("R1=10_C1=2o7_R2=500_C2=1o05_BB=75_CPN=6o891","real8()")
xpanel(78,420)
}
objectvar scene_vector_[1]
{doNotify()}
